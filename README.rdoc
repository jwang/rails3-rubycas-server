= roodo-cas-server beta

by JUT Living Development Co., Ltd

== LINKS:

* {github}[https://github.com/wuhsien/roodo-cas-server]

== DESCRIPTION:

A clone of the rubycas-server, providing a cross-domain single sign-on solution for web applications using Rails3.

== REQUIREMENTS:

* gem install rails
* gem install mysql2
* gem install crypt-isaac
* gem install gettext
* gem install unicorn

== Installation & Usage:

You chould configure the config/database.yml for your Database.
  development: &default
    adapter: mysql2
    encoding: utf8
    reconnect: false
    database: roodo_cas_development
    pool: 5
    username:
    password:
    host:
    
Then, run following commands to install dependencies and generate the necessary database schema.
  bundle install
  rake db:migrate
  
We use unicorn to be the default web server. So, You need to configure the config/unicorn.rb to specify the listen port, log path etc...  
After above, type the following command to start the server.
  ./bin/start

== Use SQLEncrypted Authenticator

You need to find out and modify the configuration that look something like following (by default located in /config/cas.yml).
  authenticator:
    class: CASServer::Authenticators::SQLEncrypted
    database:
      adapter: mysql2
      database: some_database_with_users_table
      username: 
      password: 
      host: 
    user_table: users
    username_column: email_address
    encrypt_function: 'user.encrypted_password == Digest::SHA256.hexdigest("#{user.encryption_salt}::#{@password}")'
The default value of encrypt_function is 
  'user.encrypted_password == Digest::SHA256.hexdigest("#{user.encryption_salt}::#{@password}")'
You can modify it to suit your app, it will look like following (use SHA1 for example)
  'user.encrypted_password == Digest::SHA1.hexdigest("#{user.encryption_salt}::#{@password}")'

== Use SQLMd5 Authenticator
  
Modify your Authenticators Class in configuration file (by default located in /config/cas.yml).
  class: CASServer::Authenticators::SQLMd5
And your configuration should look something like following
  authenticator:
    class: CASServer::Authenticators::SQLMd5
    database:
      adapter: mysql2
      database: some_database_with_users_table
      username: 
      password: 
      host: 
    user_table: users
    username_column: username
    password_column: password
    extra_attributes: username, email, birthday

== LICENSE:

  Apache License 2.0

  Copyright Â© 2011, JUT Living Development Co., Ltd. All rights reserved.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.